--- a/src/auth.c
+++ b/src/auth.c
@@ -1879,7 +1879,7 @@ int pr_auth_chroot(const char *path) {
   default_tz = tzname[0];
 #else
   /* Per the tzset(3) man page, this should be the assumed default. */
-  default_tz = ":/etc/localtime";
+  default_tz = ":/opt/etc/localtime";
 #endif
 
   tz = pr_env_get(session.pool, "TZ");
--- a/src/ctrls.c
+++ b/src/ctrls.c
@@ -1262,7 +1262,7 @@ int pr_ctrls_connect(const char *socket_
 
   cl_sock.sun_family = AF_UNIX;
   pr_snprintf(cl_sock.sun_path, sizeof(cl_sock.sun_path) - 1, "%s%05u",
-    "/tmp/ftp.cl", (unsigned int) getpid());
+    "/opt/tmp/ftp.cl", (unsigned int) getpid());
   len = sizeof(cl_sock);
 
   /* Make sure the file doesn't already exist */
@@ -1654,7 +1654,7 @@ static int ctrls_get_creds_basic(struct
 
   /* Parse the PID out of the path */
   tmp = sock->sun_path;
-  tmp += strlen("/tmp/ftp.cl");
+  tmp += strlen("/opt/tmp/ftp.cl");
   cl_pid = atol(tmp);
 
   /* Return the IDs of the caller */
--- a/src/fsio.c
+++ b/src/fsio.c
@@ -132,20 +132,20 @@ static int chroot_allow_path(const char
    */
 
   path_len = strlen(path);
-  if (path_len < 4) {
+  if (path_len < 8) {
     /* Path is not long enough to include one of the guarded directories. */
     return 0;
   }
 
-  if (path_len == 4) {
-    if (strcmp(path, "/etc") == 0 ||
-        strcmp(path, "/lib") == 0) {
+  if (path_len == 8) {
+    if (strcmp(path, "/opt/etc") == 0 ||
+        strcmp(path, "/opt/lib") == 0) {
       res = -1;
     }
 
   } else {
-    if (strncmp(path, "/etc/", 5) == 0 ||
-        strncmp(path, "/lib/", 5) == 0) {
+    if (strncmp(path, "/opt/etc/", 9) == 0 ||
+        strncmp(path, "/opt/lib/", 9) == 0) {
       res = -1;
     }
   }
--- a/src/main.c
+++ b/src/main.c
@@ -2072,7 +2072,7 @@ static struct option opts[] = {
  *   https://www.freedesktop.org/software/systemd/man/os-release.html
  */
 static void show_os_release(void) {
-  const char *os_release_path = "/etc/os-release";
+  const char *os_release_path = "/opt/etc/os-release";
   FILE *fh;
   char *line = NULL;
   size_t linelen = 0;
--- a/src/wtmp.c
+++ b/src/wtmp.c
@@ -59,7 +59,7 @@ int log_wtmp(const char *line, const cha
 /* This path works for FreeBSD; not sure what to do for other platforms which
  * don't define _PATH_WTMPX or _PATH_UTMPX.
  */
-#   define WTMPX_FILE "/var/log/utx.log"
+#   define WTMPX_FILE "/opt/var/log/utx.log"
 # endif
 #endif
 
--- a/configure.in
+++ b/configure.in
@@ -4430,9 +4430,9 @@ locale_dir="`eval echo ${localedir}`"
 locale_dir="`eval echo ${locale_dir}`"
 AC_DEFINE_UNQUOTED(PR_LOCALE_DIR, "`eval echo "${locale_dir}"`", [Define the locale directory])
 
-AC_DEFINE_UNQUOTED(PR_RUN_DIR, "`eval echo "${localstatedir}"`", [Define the run directory])
+AC_DEFINE_UNQUOTED(PR_RUN_DIR, "`eval echo "/opt/var/run/proftpd"`", [Define the run directory])
 AC_DEFINE_UNQUOTED(PR_CONFIG_FILE_PATH, "`eval echo "${sysconfdir}/proftpd.conf"`", [Define the configuration file path])
-AC_DEFINE_UNQUOTED(PR_PID_FILE_PATH, "`eval echo "${localstatedir}/proftpd.pid"`", [Define the PID file path])
+AC_DEFINE_UNQUOTED(PR_PID_FILE_PATH, "`eval echo "/opt/var/run/proftpd/proftpd.pid"`", [Define the PID file path])
 
 prefix="$pr_saved_prefix"
 exec_prefix="$pr_saved_exec_prefix"
